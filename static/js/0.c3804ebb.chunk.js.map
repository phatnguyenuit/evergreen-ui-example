{"version":3,"sources":["../../../../src/icons/src/Icon.js","../../../../src/icons/src/IconWrapper.js","../../../../src/spinner/src/Spinner.js","../../../../src/buttons/src/Button.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../../../../src/icons/generated/EditIcon.js","../../../../src/icons/generated/ArrowRightIcon.js","../../../../src/buttons/src/IconButton.js","../../../../src/icons/generated/TrashIcon.js","../../../../src/icons/generated/ArrowLeftIcon.js","../../../../src/buttons/src/BackButton.js"],"names":["emptyObject","Icon","forwardRef","color","size","name","title","style","svgPaths16","svgPaths20","svgProps","theme","useTheme","pixelGridSize","paths","key","d","fillRule","viewBox","styles","useMemo","fill","is","ref","data-icon","width","height","PropTypes","isRequired","IconWrapper","memo","icon","props","iconProps","iconWithProps","ReactIs","Component","React","display","string","loadingKeyframes","transform","loadingCircleKeyframes","strokeDashoffset","outerClass","animation","Spinner","delay","useState","isVisible","setIsVisible","useEffect","delayTimer","setTimeout","clearTimeout","lineHeight","className","x","y","strokeDasharray","strokeWidth","strokeMiterlimit","strokeLinecap","stroke","cx","cy","r","Box","number","ButtonIcon","spacing","edge","edgeMargin","Math","innerMargin","marginLeft","marginRight","position","fontFamily","fontWeight","alignItems","flexWrap","Button","intent","isActive","children","disabled","appearance","isLoading","paddingRight","paddingLeft","paddingTop","paddingBottom","iconBefore","iconAfter","restProps","themedClassName","textSize","borderRadius","iconSize","padding","pr","pl","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","marginTop","marginBottom","dimensions","layout","module","exports","require","b","Symbol","for","c","e","f","g","h","k","l","m","n","p","q","t","v","w","z","a","u","$$typeof","type","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","EditIcon","ArrowRightIcon","IconButton","justifyContent","TrashIcon","ArrowLeftIcon","BackButton"],"mappings":"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","file":"static/js/0.c3804ebb.chunk.js","sourcesContent":["import React, { forwardRef, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useTheme } from '../../theme'\n\n/**\n * This implementation is a remix of the Icon component in Blueprintjs:\n * https://github.com/palantir/blueprint/blob/813e93f2/packages/core/src/components/icon/icon.tsx#L15\n * Refer to the LICENSE for BlueprintJS here: https://github.com/palantir/blueprint/blob/develop/LICENSE\n */\n\nconst emptyObject = {}\n\nconst Icon = forwardRef(function Icon(\n  {\n    color = 'currentColor',\n    size = 16,\n    name,\n    title,\n    style = emptyObject,\n    svgPaths16,\n    svgPaths20,\n    ...svgProps\n  },\n  ref\n) {\n  const theme = useTheme()\n  const SIZE_STANDARD = 16\n  const SIZE_LARGE = 20\n\n  // Choose which pixel grid is most appropriate for given icon size\n  const pixelGridSize = size >= SIZE_LARGE ? SIZE_LARGE : SIZE_STANDARD\n  const pathStrings = pixelGridSize === SIZE_STANDARD ? svgPaths16 : svgPaths20\n  const paths = pathStrings.map((d, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <path key={i} d={d} fillRule=\"evenodd\" />\n  ))\n\n  const viewBox = `0 0 ${pixelGridSize} ${pixelGridSize}`\n\n  const styles = useMemo(() => {\n    return color ? { ...style, fill: theme.getIconColor(color) } : style\n  }, [style, color])\n\n  return (\n    <Box\n      is=\"svg\"\n      ref={ref}\n      {...svgProps}\n      data-icon={name}\n      style={styles}\n      width={size}\n      height={size}\n      viewBox={viewBox}\n    >\n      {title && <title>{title}</title>}\n      {paths}\n    </Box>\n  )\n})\n\nIcon.propTypes = {\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Size of the icon, in pixels.\n   * Blueprint contains 16px and 20px SVG icon images,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Name of the icon\n   */\n  name: PropTypes.string,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string,\n\n  /**\n   * CSS style properties.\n   */\n  style: PropTypes.object,\n\n  svgPaths16: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n  svgPaths20: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Icon\n","import React, { forwardRef, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactIs from 'react-is'\nimport Box from 'ui-box'\n\n/**\n * This is an internal helper component for rendering custom or Evergreen icons\n * Box props are applied to the outer Box container, and Evergreen icon-specific props are added to the icon element.\n */\nexport const IconWrapper = memo(\n  forwardRef(function Icon(\n    { icon, color, size, title, ...props },\n    ref\n  ) {\n    if (!icon || typeof icon === 'string') {\n      return null\n    }\n\n    const iconProps = {\n      color,\n      size,\n      title,\n    }\n\n    let iconWithProps = null\n    if (ReactIs.isValidElementType(icon)) {\n      const Component = icon\n      iconWithProps = <Component ref={ref} {...iconProps} />\n    } else if (React.isValidElement(icon)) {\n      iconWithProps = React.cloneElement(icon, { ...iconProps, ...icon.props, ref })\n    }\n\n    return (\n      <Box display=\"inline-flex\" {...props}>\n        {iconWithProps}\n      </Box>\n    )\n  })\n)\n\nIconWrapper.propTypes = {\n  /**\n   * Color of icon. Equivalent to setting CSS `fill` property.\n   */\n  color: PropTypes.string,\n\n  /**\n   * The icon component - whether an Evergreen icon or a custom icon node:\n   *\n   * - If `null` or `undefined` or `false`, this component will render nothing.\n   * - If given a `JSX.Element`, that element will be rendered, with size/color/title props cloned into it\n   * - If given a React element type, it will be rendered with the other icon props\n   *   As a consumer, you should never use `<IconWrapper icon={<element />}` directly; simply render `<element />` instead.\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Size of the icon, in pixels.\n   * Icons contains 16px and 20px SVG icon paths,\n   * and chooses the appropriate resolution based on this prop.\n   */\n  size: PropTypes.number,\n\n  /**\n   * Description string.\n   * Browsers usually render this as a tooltip on hover, whereas screen\n   * readers will use it for aural feedback.\n   * By default, this is set to the icon's name for accessibility.\n   */\n  title: PropTypes.string\n}\n","import React, { useState, useEffect, forwardRef, memo } from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { useTheme } from '../../theme'\n\nconst loadingKeyframes = css.keyframes('loading', {\n  '0%': {\n    transform: 'rotate(0)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n})\n\nconst loadingCircleKeyframes = css.keyframes('loading-circle', {\n  '0%': {\n    strokeDashoffset: 600\n  },\n  '100%': {\n    strokeDashoffset: 0\n  }\n})\n\nconst outerClass = css({\n  animation: `${loadingKeyframes} 2s linear infinite`\n}).toString()\n\nconst innerClass = color =>\n  css({\n    strokeDashoffset: 600,\n    strokeDasharray: 300,\n    strokeWidth: 12,\n    strokeMiterlimit: 10,\n    strokeLinecap: 'round',\n    animation: `${loadingCircleKeyframes} 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite`,\n    stroke: color,\n    fill: 'transparent'\n  }).toString()\n\nconst Spinner = memo(\n  forwardRef(function Spinner({ delay = 0, size = 40, ...props }, ref) {\n    const theme = useTheme()\n    const [isVisible, setIsVisible] = useState(delay === 0)\n\n    useEffect(() => {\n      let delayTimer = null\n      if (delay > 0) {\n        delayTimer = setTimeout(() => {\n          setIsVisible(true)\n        }, delay)\n      }\n\n      return function() {\n        clearTimeout(delayTimer)\n      }\n    }, [])\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Box width={size} height={size} lineHeight={0} {...props} ref={ref}>\n        <Box\n          is=\"svg\"\n          className={outerClass}\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"0 0 150 150\"\n        >\n          <Box\n            is=\"circle\"\n            className={innerClass(theme.spinnerColor)}\n            cx=\"75\"\n            cy=\"75\"\n            r=\"60\"\n          />\n        </Box>\n      </Box>\n    )\n  })\n)\n\nSpinner.propTypes = {\n  /**\n   * Composes the Box component as the base.\n   */\n  ...Box.propTypes,\n\n  /**\n   * Delay after which spinner should be visible.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * The size of the spinner.\n   */\n  size: PropTypes.number\n}\n\nexport default Spinner\n","import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { dimensions, spacing, position, layout } from 'ui-box'\nimport { IconWrapper } from '../../icons/src/IconWrapper'\nimport { Text } from '../../typography'\nimport { Spinner } from '../../spinner'\nimport { useTheme } from '../../theme'\n\n/* eslint-disable-next-line react/prop-types */\nconst ButtonIcon = memo(function ButtonIcon({ icon, size, spacing, edge }) {\n  if (!icon) return null\n\n  const edgeMargin = -Math.round(spacing * 0.2)\n  const innerMargin = Math.round(size * 0.7)\n  const marginLeft = edge === 'start' ? edgeMargin : innerMargin\n  const marginRight = edge === 'end' ? edgeMargin : innerMargin\n\n  return (\n    <IconWrapper\n      icon={icon}\n      size={size}\n      marginLeft={marginLeft}\n      marginRight={marginRight}\n    />\n  )\n})\n\nconst styles = {\n  position: 'relative',\n  fontFamily: 'ui',\n  fontWeight: 500,\n  display: 'inline-flex',\n  alignItems: 'center',\n  flexWrap: 'nowrap'\n}\n\nconst Button = memo(\n  forwardRef(function Button(props, ref) {\n    const theme = useTheme()\n\n    const {\n      className,\n\n      intent = 'none',\n      height = 32,\n      isActive = false,\n      children,\n      disabled,\n      appearance = 'default',\n      isLoading,\n\n      // Paddings\n      paddingRight,\n      paddingLeft,\n      paddingTop = 0,\n      paddingBottom = 0,\n\n      // Icons\n      iconBefore,\n      iconAfter,\n\n      ...restProps\n    } = props\n\n    const themedClassName = theme.getButtonClassName(appearance, intent)\n    const textSize = theme.getTextSizeForControlHeight(height)\n\n    const borderRadius = theme.getBorderRadiusForControlHeight(height)\n    const iconSize = theme.getIconSizeForButton(height)\n\n    const padding = Math.round(height / 2)\n    const pr = paddingRight !== undefined ? paddingRight : padding // eslint-disable-line no-negated-condition\n    const pl = paddingLeft !== undefined ? paddingLeft : padding // eslint-disable-line no-negated-condition\n\n    return (\n      <Text\n        is=\"button\"\n        ref={ref}\n        className={cx(themedClassName, className)}\n        borderTopRightRadius={borderRadius}\n        borderBottomRightRadius={borderRadius}\n        borderTopLeftRadius={borderRadius}\n        borderBottomLeftRadius={borderRadius}\n        paddingTop={paddingTop}\n        paddingBottom={paddingBottom}\n        paddingRight={pr}\n        paddingLeft={pl}\n        marginLeft={0} // Removes weird margins in Safari\n        marginRight={0} // Removes weird margins in Safari\n        marginTop={0} // Removes weird margins in Safari\n        marginBottom={0} // Removes weird margins in Safari\n        size={textSize}\n        color={null} // Prevent the Text color overriding the glamor appearanceStyle color\n        height={height}\n        lineHeight={`${height}px`}\n        {...(isActive ? { 'data-active': true } : {})}\n        {...styles}\n        {...restProps}\n        disabled={disabled || isLoading}\n      >\n        {isLoading && (\n          <Spinner\n            marginLeft={-Math.round(height / 8)}\n            marginRight={Math.round(height / 4)}\n            size={Math.round(height / 2)}\n          />\n        )}\n        <ButtonIcon\n          icon={iconBefore}\n          size={iconSize}\n          spacing={pl}\n          edge=\"start\"\n        />\n        {children}\n        <ButtonIcon icon={iconAfter} size={iconSize} spacing={pr} edge=\"end\" />\n      </Text>\n    )\n  })\n)\n\nButton.propTypes = {\n  /**\n   * Composes the dimensions spec from the Box primitive.\n   */\n  ...dimensions.propTypes,\n\n  /**\n   * Composes the spacing spec from the Box primitive.\n   */\n  ...spacing.propTypes,\n\n  /**\n   * Composes the position spec from the Box primitive.\n   */\n  ...position.propTypes,\n\n  /**\n   * Composes the layout spec from the Box primitive.\n   */\n  ...layout.propTypes,\n\n  /**\n   * The intent of the button.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']),\n\n  /**\n   * The appearance of the button.\n   */\n  appearance: PropTypes.oneOf(['default', 'minimal', 'primary']),\n\n  /**\n   * When true, show a loading spinner before the children.\n   * This also disables the button.\n   */\n  isLoading: PropTypes.bool,\n\n  /**\n   * Forcefully set the active state of a button.\n   * Useful in conjuction with a Popover.\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * Sets an icon before the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconBefore: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Sets an icon after the text. Can be any icon from Evergreen or a custom element.\n   */\n  iconAfter: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * When true, the button is disabled.\n   * isLoading also sets the button to disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class name passed to the button.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Button\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z'\n]\nconst svgPaths20 = [\n  'M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z'\n]\n\nexport const EditIcon = memo(\n  forwardRef(function EditIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"edit\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M14.7 7.29l-5-5a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 1 1h9.59l-3.29 3.29a1.003 1.003 0 001.42 1.42l5-5c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z'\n]\nconst svgPaths20 = [\n  'M18.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42L15.59 9H2c-.55 0-1 .45-1 1s.45 1 1 1h13.59l-4.29 4.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z'\n]\n\nexport const ArrowRightIcon = memo(\n  forwardRef(function ArrowRightIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"arrow-right\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { dimensions, spacing, position, layout } from 'ui-box'\nimport { useTheme } from '../../theme'\nimport { IconWrapper } from '../../icons/src/IconWrapper'\nimport Button from './Button'\n\nconst IconButton = memo(\n  forwardRef(function IconButton(props, ref) {\n    const theme = useTheme()\n    const { icon, iconSize, height = 32, intent = 'none', ...restProps } = props\n\n    return (\n      <Button\n        ref={ref}\n        intent={intent}\n        height={height}\n        width={height}\n        paddingLeft={0}\n        paddingRight={0}\n        display=\"flex\"\n        justifyContent=\"center\"\n        {...restProps}\n      >\n        <IconWrapper\n          icon={icon}\n          color={intent === 'none' ? 'default' : 'currentColor'}\n          size={iconSize || theme.getIconSizeForIconButton(height)}\n        />\n      </Button>\n    )\n  })\n)\n\nIconButton.propTypes = {\n  /**\n   * Composes the dimensions spec from the Box primitive.\n   */\n  ...dimensions.propTypes,\n\n  /**\n   * Composes the spacing spec from the Box primitive.\n   */\n  ...spacing.propTypes,\n\n  /**\n   * Composes the position spec from the Box primitive.\n   */\n  ...position.propTypes,\n\n  /**\n   * Composes the layout spec from the Box primitive.\n   */\n  ...layout.propTypes,\n\n  /**\n   * The Evergreen icon or custom icon to render\n   */\n  icon: PropTypes.oneOfType([PropTypes.elementType, PropTypes.element]),\n\n  /**\n   * Specifies an explicit icon size instead of the default value\n   */\n  iconSize: PropTypes.number,\n\n  /**\n   * The intent of the button.\n   */\n  intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']),\n\n  /**\n   * The appearance of the button.\n   */\n  appearance: PropTypes.oneOf(['default', 'minimal', 'primary']),\n\n  /**\n   * Forcefully set the active state of a button.\n   * Useful in conjuction with a Popover.\n   */\n  isActive: PropTypes.bool,\n\n  /**\n   * When true, the button is disabled.\n   * isLoading also sets the button to disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class name passed to the button.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default IconButton\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z'\n]\nconst svgPaths20 = [\n  'M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z'\n]\n\nexport const TrashIcon = memo(\n  forwardRef(function TrashIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"trash\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M13.99 6.99H4.41L7.7 3.7a1.003 1.003 0 00-1.42-1.42l-5 5a1.014 1.014 0 000 1.42l5 5a1.003 1.003 0 001.42-1.42L4.41 8.99H14c.55 0 1-.45 1-1s-.46-1-1.01-1z'\n]\nconst svgPaths20 = [\n  'M18 9H4.41L8.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L4.41 11H18c.55 0 1-.45 1-1s-.45-1-1-1z'\n]\n\nexport const ArrowLeftIcon = memo(\n  forwardRef(function ArrowLeftIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"arrow-left\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { forwardRef, memo } from 'react'\nimport { ArrowLeftIcon } from '../../icons'\nimport Button from './Button'\n\nconst BackButton = memo(\n  forwardRef(function BackButton({ children = 'Back', ...props }, ref) {\n    return (\n      <Button iconBefore={ArrowLeftIcon} {...props} ref={ref}>\n        {children}\n      </Button>\n    )\n  })\n)\n\nBackButton.propTypes = {\n  /** Composes the Button component as the base. */\n  ...Button.propTypes\n}\n\nexport default BackButton\n"],"sourceRoot":""}