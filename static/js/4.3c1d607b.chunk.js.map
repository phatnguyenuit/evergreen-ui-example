{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../../../src/tabs/src/Tablist.js","../../../../src/tabs/src/Tab.js","../../../src/lib/safe-invoke.js","../../../../src/tabs/src/SidebarTab.js","components/state-wrapper/index.tsx","containers/tabs/index.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Tablist","forwardRef","props","ref","role","Box","styles","display","fontWeight","paddingX","marginX","borderRadius","lineHeight","alignItems","justifyContent","textDecoration","tabIndex","noop","Tab","memo","theme","useTheme","appearance","disabled","height","is","isSelected","onKeyPress","onSelect","className","rest","textSize","elementBasedProps","classNames","cx","size","onClick","e","fn","args","safeInvoke","Text","PropTypes","string","width","paddingLeft","marginBottom","SidebarTab","children","flex","StateWrapperComponent","initialState","useState","state","setState","StateWrapper","displayName","TabsComponent","Pane","selectedIndex","tabs","marginTop","majorScale","Heading","marginRight","map","tab","index","id","aria-controls","prev","padding","background","aria-labelledby","aria-hidden","Paragraph","Tabs"],"mappings":"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","file":"static/js/4.3c1d607b.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { forwardRef } from 'react'\nimport Box from 'ui-box'\n\nconst Tablist = forwardRef(function Tablist(props, ref) {\n  return <Box role=\"tablist\" {...props} ref={ref} />\n})\n\nTablist.propTypes = Box.propTypes\n\nexport default Tablist\n","import PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport React, { forwardRef, memo } from 'react'\nimport safeInvoke from '../../lib/safe-invoke'\nimport warning from '../../lib/warning'\nimport { useTheme } from '../../theme'\nimport { Text } from '../../typography'\n\nconst styles = {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n}\n\nconst noop = () => {}\n\nconst Tab = memo(\n  forwardRef(function Tab(props, ref) {\n    const theme = useTheme()\n\n    const {\n      appearance,\n      disabled = false,\n      height = 28,\n      is = 'span',\n      isSelected,\n      onKeyPress = noop,\n      onSelect = noop,\n      className,\n      ...rest\n    } = props\n\n    const handleClick = e => {\n      safeInvoke(props.onClick, e)\n      onSelect()\n    }\n\n    const handleKeyPress = e => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        onSelect()\n        e.preventDefault()\n      }\n\n      onKeyPress(e)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        typeof props.onClick === 'function',\n        '<Tab> expects `onSelect` prop, but you passed `onClick`.'\n      )\n    }\n\n    const textSize = theme.getTextSizeForControlHeight(height)\n\n    let elementBasedProps\n    if (disabled) {\n      elementBasedProps = {\n        'aria-disabled': true\n      }\n    }\n\n    if (is === 'a') {\n      // Use aria-current when it's a link\n      // https://tink.uk/using-the-aria-current-attribute/\n      elementBasedProps = isSelected\n        ? {\n            ...elementBasedProps,\n            'aria-current': 'page'\n          }\n        : {}\n    } else {\n      // Use a role=\"tablist\" around the tabs\n      // Also pass down a aria-controls=\"panelId\"\n      // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n      elementBasedProps = {\n        ...elementBasedProps,\n        'aria-selected': isSelected,\n        role: 'tab'\n      }\n    }\n\n    const classNames = cx(theme.getTabClassName(appearance), className)\n\n    return (\n      <Text\n        className={classNames}\n        is={is}\n        size={textSize}\n        height={height}\n        ref={ref}\n        {...styles}\n        {...rest}\n        onClick={handleClick}\n        onKeyPress={handleKeyPress}\n        {...elementBasedProps}\n      />\n    )\n  })\n)\n\nTab.propTypes = {\n  /**\n   * Composes the Text component as the base.\n   */\n  ...Text.propTypes,\n\n  /**\n   * Function triggered when tab is selected.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * When true, the tab is selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * The appearance of the tab.\n   * The default theme only comes with a default style.\n   */\n  appearance: PropTypes.string,\n\n  /**\n   * Class name passed to the Tab.\n   * Only use this if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Tab\n","export default function safeInvoke(fn, ...args) {\n  if (typeof fn === 'function') {\n    return fn(...args)\n  }\n}\n","import React, { memo, forwardRef } from 'react'\nimport Box from 'ui-box'\nimport Tab from './Tab'\n\nconst styles = {\n  width: '100%',\n  paddingX: 0,\n  paddingLeft: 8,\n  marginX: 0,\n  marginBottom: 4,\n  justifyContent: 'auto'\n}\n\nconst SidebarTab = memo(\n  forwardRef(function SidebarTab(props, ref) {\n    const { children, height = 32, isSelected, ...rest } = props\n\n    return (\n      <Tab\n        isSelected={isSelected}\n        height={height}\n        {...styles}\n        {...rest}\n        ref={ref}\n        display=\"flex\"\n      >\n        <Box is=\"span\" flex=\"1\">\n          {children}\n        </Box>\n      </Tab>\n    )\n  })\n)\n\nSidebarTab.propTypes = Tab.propTypes\n\nexport default SidebarTab\n","import React, { memo, useState } from 'react';\n\nexport function StateWrapperComponent<T>({\n  initialState,\n  children,\n}: StateWrapperProps<T>) {\n  const [state, setState] = useState(initialState);\n  return <>{children({ state, setState })}</>;\n}\n\nconst StateWrapper = memo(\n  StateWrapperComponent,\n) as typeof StateWrapperComponent & React.ComponentType<any>;\nStateWrapper.displayName = 'StateWrapper';\n\nexport default StateWrapper;\n\nexport type StateRenderer<T> = ({\n  state,\n  setState,\n}: {\n  state: T;\n  setState: React.Dispatch<React.SetStateAction<T>>;\n}) => React.ReactNode;\n\nexport interface StateWrapperProps<T> {\n  initialState: T;\n  children: StateRenderer<T>;\n}\n","import React, { memo } from 'react';\nimport {\n  Pane,\n  Tablist,\n  Tab,\n  SidebarTab,\n  Paragraph,\n  majorScale,\n  Heading,\n} from 'evergreen-ui';\nimport StateWrapper from 'components/state-wrapper';\n\nexport const TabsComponent: React.FC = () => (\n  <Pane>\n    <StateWrapper\n      initialState={{\n        selectedIndex: 0,\n        tabs: ['Traits', 'Event History', 'Identities'],\n      }}\n    >\n      {({ state: { selectedIndex, tabs }, setState }) => (\n        <Pane>\n          <Pane marginTop={majorScale(3)}>\n            <Heading is=\"h3\" size={500}>\n              Regular Tabs\n            </Heading>\n            <Pane marginTop={majorScale(1)}>\n              <Tablist marginBottom={16} marginRight={majorScale(3)}>\n                {tabs.map((tab, index) => (\n                  <Tab\n                    key={tab}\n                    id={tab}\n                    isSelected={index === selectedIndex}\n                    aria-controls={`panel-${tab}`}\n                    onSelect={() =>\n                      setState((prev) => ({ ...prev, selectedIndex: index }))\n                    }\n                  >\n                    {tab}\n                  </Tab>\n                ))}\n              </Tablist>\n              <Pane padding={majorScale(2)} background=\"tint1\" flex=\"1\">\n                {tabs.map((tab, index) => (\n                  <Pane\n                    key={tab}\n                    id={`panel-${tab}`}\n                    role=\"tabpanel\"\n                    aria-labelledby={tab}\n                    aria-hidden={index !== selectedIndex}\n                    display={index === selectedIndex ? 'block' : 'none'}\n                  >\n                    <Paragraph>Panel {tab}</Paragraph>\n                  </Pane>\n                ))}\n              </Pane>\n            </Pane>\n          </Pane>\n          <Pane marginTop={majorScale(3)}>\n            <Heading is=\"h3\" size={500}>\n              Sidebar Tabs\n            </Heading>\n            <Pane marginTop={majorScale(1)} display=\"flex\">\n              <Tablist marginBottom={majorScale(2)} marginRight={majorScale(3)}>\n                {tabs.map((tab, index) => (\n                  <SidebarTab\n                    key={tab}\n                    id={tab}\n                    isSelected={index === selectedIndex}\n                    aria-controls={`panel-${tab}`}\n                    onSelect={() =>\n                      setState((prev) => ({ ...prev, selectedIndex: index }))\n                    }\n                  >\n                    {tab}\n                  </SidebarTab>\n                ))}\n              </Tablist>\n              <Pane padding={majorScale(2)} background=\"tint1\" flex=\"1\">\n                {tabs.map((tab, index) => (\n                  <Pane\n                    key={tab}\n                    id={`panel-${tab}`}\n                    role=\"tabpanel\"\n                    aria-labelledby={tab}\n                    aria-hidden={index !== selectedIndex}\n                    display={index === selectedIndex ? 'block' : 'none'}\n                  >\n                    <Paragraph>Panel {tab}</Paragraph>\n                  </Pane>\n                ))}\n              </Pane>\n            </Pane>\n          </Pane>\n        </Pane>\n      )}\n    </StateWrapper>\n  </Pane>\n);\n\nconst Tabs = memo(TabsComponent);\nTabs.displayName = 'Tabs';\n\nexport default Tabs;\n"],"sourceRoot":""}