{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx","utils/string.ts","containers lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["pages","getRandomPage","Math","floor","random","length","App","useState","activePage","setActivePage","handleClickPage","useCallback","page","textColors","useContext","ThemeContext","colors","text","getTextColor","success","default","ActivePage","useMemo","lazy","Pane","paddingX","majorScale","paddingY","Heading","is","size","marginTop","display","flexDirection","flexWrap","gap","map","Card","elevation","cursor","padding","onClick","Text","fontWeight","color","toTitleCase","fallback","Paragraph","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","value","defaultTheme","document","getElementById","str","charAt","toUpperCase","substr","toLowerCase","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","id","all","slice","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.e16c779a.chunk.js","sourcesContent":["import {\n  lazy,\n  Suspense,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\nimport {\n  Card,\n  Heading,\n  majorScale,\n  Pane,\n  Paragraph,\n  Text,\n  ThemeContext,\n} from 'evergreen-ui';\nimport { toTitleCase } from './utils/string';\n\nconst pages = ['buttons', 'badges', 'tabs', 'avatars'] as const;\ntype Page = typeof pages[number];\n\nconst getRandomPage = (): Page => {\n  return pages[Math.floor(Math.random() * pages.length)];\n};\n\nfunction App() {\n  const [activePage, setActivePage] = useState(getRandomPage);\n  const handleClickPage = useCallback(\n    (page: Page) => () => {\n      setActivePage(page);\n    },\n    [],\n  );\n  const {\n    colors: { text: textColors },\n  } = useContext(ThemeContext);\n\n  const getTextColor = useCallback(\n    (page: Page) => {\n      if (page === activePage) return textColors.success;\n      return textColors.default;\n    },\n    [activePage, textColors.default, textColors.success],\n  );\n\n  const ActivePage = useMemo(\n    () => lazy(() => import(`./containers/${activePage}`)),\n    [activePage],\n  );\n  return (\n    <main>\n      <Pane paddingX={majorScale(2)} paddingY={majorScale(3)}>\n        <Heading is=\"h1\" size={800}>\n          Evergreen UI\n        </Heading>\n        <Pane\n          marginTop={majorScale(2)}\n          display=\"flex\"\n          flexDirection=\"row\"\n          flexWrap=\"wrap\"\n          gap={majorScale(2)}\n        >\n          {pages.map((page) => (\n            <Card\n              key={page}\n              elevation={1}\n              cursor=\"pointer\"\n              padding={majorScale(2)}\n              onClick={handleClickPage(page)}\n            >\n              <Text fontWeight=\"bold\" color={getTextColor(page)}>\n                {toTitleCase(page)}\n              </Text>\n            </Card>\n          ))}\n        </Pane>\n        <Pane marginTop={majorScale(3)}>\n          <Heading is=\"h2\" size={700}>\n            {toTitleCase(activePage)}\n          </Heading>\n          <Suspense\n            fallback={<Paragraph>{`Loading page \"${activePage}\"`}</Paragraph>}\n          >\n            <ActivePage />\n          </Suspense>\n        </Pane>\n      </Pane>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, defaultTheme } from 'evergreen-ui';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider value={defaultTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const toTitleCase = (str: string) =>\n  str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n","var map = {\n\t\"./avatars\": [\n\t\t21,\n\t\t1\n\t],\n\t\"./avatars/\": [\n\t\t21,\n\t\t1\n\t],\n\t\"./avatars/index\": [\n\t\t21,\n\t\t1\n\t],\n\t\"./avatars/index.tsx\": [\n\t\t21,\n\t\t1\n\t],\n\t\"./badges\": [\n\t\t22,\n\t\t2\n\t],\n\t\"./badges/\": [\n\t\t22,\n\t\t2\n\t],\n\t\"./badges/index\": [\n\t\t22,\n\t\t2\n\t],\n\t\"./badges/index.tsx\": [\n\t\t22,\n\t\t2\n\t],\n\t\"./buttons\": [\n\t\t19,\n\t\t0,\n\t\t3\n\t],\n\t\"./buttons/\": [\n\t\t19,\n\t\t0,\n\t\t3\n\t],\n\t\"./buttons/index\": [\n\t\t19,\n\t\t0,\n\t\t3\n\t],\n\t\"./buttons/index.tsx\": [\n\t\t19,\n\t\t0,\n\t\t3\n\t],\n\t\"./tabs\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./tabs/\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./tabs/index\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./tabs/index.tsx\": [\n\t\t20,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 80;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}