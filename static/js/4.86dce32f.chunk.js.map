{"version":3,"sources":["containers/canvas/index.tsx"],"names":["CanvasComponent","ref","useRef","useEffect","current","context","getContext","fillRect","beginPath","fillStyle","arc","Math","PI","fill","closePath","width","height","style","border","Canvas","memo","displayName"],"mappings":"mIAAA,yEAEaA,EAA4B,WACvC,IAAMC,EAAMC,iBAA0B,MAqBtC,OAnBAC,qBAAU,WACR,GAAIF,EAAIG,QAAS,CACf,IAAMC,EAAUJ,EAAIG,QAAQE,WAAW,MAEnCD,IAEFA,EAAQE,SAAS,EAAG,EAAG,IAAK,KAG5BF,EAAQG,YACRH,EAAQI,UAAY,UACpBJ,EAAQK,IAAI,IAAK,GAAI,GAAI,EAAa,EAAVC,KAAKC,IAAQ,GACzCP,EAAQQ,OACRR,EAAQI,UAAY,OACpBJ,EAAQS,gBAGX,IAGD,wBACEb,IAAKA,EACLc,MAAO,IACPC,OAAQ,IACRC,MAAO,CAAEC,OAAQ,sBAKjBC,EAASC,eAAKpB,GACpBmB,EAAOE,YAAc,SAENF","file":"static/js/4.86dce32f.chunk.js","sourcesContent":["import React, { memo, useRef, useEffect } from 'react';\n\nexport const CanvasComponent: React.FC = () => {\n  const ref = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      const context = ref.current.getContext('2d');\n\n      if (context) {\n        // draw rectangle\n        context.fillRect(0, 0, 100, 100);\n\n        // draw circle\n        context.beginPath();\n        context.fillStyle = '#ff7f50';\n        context.arc(250, 50, 50, 0, Math.PI * 2, true);\n        context.fill();\n        context.fillStyle = '#000';\n        context.closePath();\n      }\n    }\n  }, []);\n\n  return (\n    <canvas\n      ref={ref}\n      width={300}\n      height={300}\n      style={{ border: '2px solid black' }}\n    />\n  );\n};\n\nconst Canvas = memo(CanvasComponent);\nCanvas.displayName = 'Canvas';\n\nexport default Canvas;\n"],"sourceRoot":""}